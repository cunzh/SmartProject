package hust.shop.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class OrdersExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table orders
	 * @mbggenerated  Fri Apr 17 15:59:21 CST 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table orders
	 * @mbggenerated  Fri Apr 17 15:59:21 CST 2015
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table orders
	 * @mbggenerated  Fri Apr 17 15:59:21 CST 2015
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orders
	 * @mbggenerated  Fri Apr 17 15:59:21 CST 2015
	 */
	public OrdersExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orders
	 * @mbggenerated  Fri Apr 17 15:59:21 CST 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orders
	 * @mbggenerated  Fri Apr 17 15:59:21 CST 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orders
	 * @mbggenerated  Fri Apr 17 15:59:21 CST 2015
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orders
	 * @mbggenerated  Fri Apr 17 15:59:21 CST 2015
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orders
	 * @mbggenerated  Fri Apr 17 15:59:21 CST 2015
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orders
	 * @mbggenerated  Fri Apr 17 15:59:21 CST 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orders
	 * @mbggenerated  Fri Apr 17 15:59:21 CST 2015
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orders
	 * @mbggenerated  Fri Apr 17 15:59:21 CST 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orders
	 * @mbggenerated  Fri Apr 17 15:59:21 CST 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orders
	 * @mbggenerated  Fri Apr 17 15:59:21 CST 2015
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table orders
	 * @mbggenerated  Fri Apr 17 15:59:21 CST 2015
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andOrderNumberIsNull() {
			addCriterion("order_number is null");
			return (Criteria) this;
		}

		public Criteria andOrderNumberIsNotNull() {
			addCriterion("order_number is not null");
			return (Criteria) this;
		}

		public Criteria andOrderNumberEqualTo(String value) {
			addCriterion("order_number =", value, "orderNumber");
			return (Criteria) this;
		}

		public Criteria andOrderNumberNotEqualTo(String value) {
			addCriterion("order_number <>", value, "orderNumber");
			return (Criteria) this;
		}

		public Criteria andOrderNumberGreaterThan(String value) {
			addCriterion("order_number >", value, "orderNumber");
			return (Criteria) this;
		}

		public Criteria andOrderNumberGreaterThanOrEqualTo(String value) {
			addCriterion("order_number >=", value, "orderNumber");
			return (Criteria) this;
		}

		public Criteria andOrderNumberLessThan(String value) {
			addCriterion("order_number <", value, "orderNumber");
			return (Criteria) this;
		}

		public Criteria andOrderNumberLessThanOrEqualTo(String value) {
			addCriterion("order_number <=", value, "orderNumber");
			return (Criteria) this;
		}

		public Criteria andOrderNumberLike(String value) {
			addCriterion("order_number like", value, "orderNumber");
			return (Criteria) this;
		}

		public Criteria andOrderNumberNotLike(String value) {
			addCriterion("order_number not like", value, "orderNumber");
			return (Criteria) this;
		}

		public Criteria andOrderNumberIn(List<String> values) {
			addCriterion("order_number in", values, "orderNumber");
			return (Criteria) this;
		}

		public Criteria andOrderNumberNotIn(List<String> values) {
			addCriterion("order_number not in", values, "orderNumber");
			return (Criteria) this;
		}

		public Criteria andOrderNumberBetween(String value1, String value2) {
			addCriterion("order_number between", value1, value2, "orderNumber");
			return (Criteria) this;
		}

		public Criteria andOrderNumberNotBetween(String value1, String value2) {
			addCriterion("order_number not between", value1, value2,
					"orderNumber");
			return (Criteria) this;
		}

		public Criteria andShopIdIsNull() {
			addCriterion("shop_id is null");
			return (Criteria) this;
		}

		public Criteria andShopIdIsNotNull() {
			addCriterion("shop_id is not null");
			return (Criteria) this;
		}

		public Criteria andShopIdEqualTo(Integer value) {
			addCriterion("shop_id =", value, "shopId");
			return (Criteria) this;
		}

		public Criteria andShopIdNotEqualTo(Integer value) {
			addCriterion("shop_id <>", value, "shopId");
			return (Criteria) this;
		}

		public Criteria andShopIdGreaterThan(Integer value) {
			addCriterion("shop_id >", value, "shopId");
			return (Criteria) this;
		}

		public Criteria andShopIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("shop_id >=", value, "shopId");
			return (Criteria) this;
		}

		public Criteria andShopIdLessThan(Integer value) {
			addCriterion("shop_id <", value, "shopId");
			return (Criteria) this;
		}

		public Criteria andShopIdLessThanOrEqualTo(Integer value) {
			addCriterion("shop_id <=", value, "shopId");
			return (Criteria) this;
		}

		public Criteria andShopIdIn(List<Integer> values) {
			addCriterion("shop_id in", values, "shopId");
			return (Criteria) this;
		}

		public Criteria andShopIdNotIn(List<Integer> values) {
			addCriterion("shop_id not in", values, "shopId");
			return (Criteria) this;
		}

		public Criteria andShopIdBetween(Integer value1, Integer value2) {
			addCriterion("shop_id between", value1, value2, "shopId");
			return (Criteria) this;
		}

		public Criteria andShopIdNotBetween(Integer value1, Integer value2) {
			addCriterion("shop_id not between", value1, value2, "shopId");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNull() {
			addCriterion("user_id is null");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("user_id is not null");
			return (Criteria) this;
		}

		public Criteria andUserIdEqualTo(Integer value) {
			addCriterion("user_id =", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotEqualTo(Integer value) {
			addCriterion("user_id <>", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThan(Integer value) {
			addCriterion("user_id >", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("user_id >=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThan(Integer value) {
			addCriterion("user_id <", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThanOrEqualTo(Integer value) {
			addCriterion("user_id <=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdIn(List<Integer> values) {
			addCriterion("user_id in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotIn(List<Integer> values) {
			addCriterion("user_id not in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdBetween(Integer value1, Integer value2) {
			addCriterion("user_id between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
			addCriterion("user_id not between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andAddressIsNull() {
			addCriterion("address is null");
			return (Criteria) this;
		}

		public Criteria andAddressIsNotNull() {
			addCriterion("address is not null");
			return (Criteria) this;
		}

		public Criteria andAddressEqualTo(String value) {
			addCriterion("address =", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressNotEqualTo(String value) {
			addCriterion("address <>", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressGreaterThan(String value) {
			addCriterion("address >", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressGreaterThanOrEqualTo(String value) {
			addCriterion("address >=", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressLessThan(String value) {
			addCriterion("address <", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressLessThanOrEqualTo(String value) {
			addCriterion("address <=", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressLike(String value) {
			addCriterion("address like", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressNotLike(String value) {
			addCriterion("address not like", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressIn(List<String> values) {
			addCriterion("address in", values, "address");
			return (Criteria) this;
		}

		public Criteria andAddressNotIn(List<String> values) {
			addCriterion("address not in", values, "address");
			return (Criteria) this;
		}

		public Criteria andAddressBetween(String value1, String value2) {
			addCriterion("address between", value1, value2, "address");
			return (Criteria) this;
		}

		public Criteria andAddressNotBetween(String value1, String value2) {
			addCriterion("address not between", value1, value2, "address");
			return (Criteria) this;
		}

		public Criteria andTelephoneIsNull() {
			addCriterion("telephone is null");
			return (Criteria) this;
		}

		public Criteria andTelephoneIsNotNull() {
			addCriterion("telephone is not null");
			return (Criteria) this;
		}

		public Criteria andTelephoneEqualTo(String value) {
			addCriterion("telephone =", value, "telephone");
			return (Criteria) this;
		}

		public Criteria andTelephoneNotEqualTo(String value) {
			addCriterion("telephone <>", value, "telephone");
			return (Criteria) this;
		}

		public Criteria andTelephoneGreaterThan(String value) {
			addCriterion("telephone >", value, "telephone");
			return (Criteria) this;
		}

		public Criteria andTelephoneGreaterThanOrEqualTo(String value) {
			addCriterion("telephone >=", value, "telephone");
			return (Criteria) this;
		}

		public Criteria andTelephoneLessThan(String value) {
			addCriterion("telephone <", value, "telephone");
			return (Criteria) this;
		}

		public Criteria andTelephoneLessThanOrEqualTo(String value) {
			addCriterion("telephone <=", value, "telephone");
			return (Criteria) this;
		}

		public Criteria andTelephoneLike(String value) {
			addCriterion("telephone like", value, "telephone");
			return (Criteria) this;
		}

		public Criteria andTelephoneNotLike(String value) {
			addCriterion("telephone not like", value, "telephone");
			return (Criteria) this;
		}

		public Criteria andTelephoneIn(List<String> values) {
			addCriterion("telephone in", values, "telephone");
			return (Criteria) this;
		}

		public Criteria andTelephoneNotIn(List<String> values) {
			addCriterion("telephone not in", values, "telephone");
			return (Criteria) this;
		}

		public Criteria andTelephoneBetween(String value1, String value2) {
			addCriterion("telephone between", value1, value2, "telephone");
			return (Criteria) this;
		}

		public Criteria andTelephoneNotBetween(String value1, String value2) {
			addCriterion("telephone not between", value1, value2, "telephone");
			return (Criteria) this;
		}

		public Criteria andTotalPriceIsNull() {
			addCriterion("total_price is null");
			return (Criteria) this;
		}

		public Criteria andTotalPriceIsNotNull() {
			addCriterion("total_price is not null");
			return (Criteria) this;
		}

		public Criteria andTotalPriceEqualTo(Float value) {
			addCriterion("total_price =", value, "totalPrice");
			return (Criteria) this;
		}

		public Criteria andTotalPriceNotEqualTo(Float value) {
			addCriterion("total_price <>", value, "totalPrice");
			return (Criteria) this;
		}

		public Criteria andTotalPriceGreaterThan(Float value) {
			addCriterion("total_price >", value, "totalPrice");
			return (Criteria) this;
		}

		public Criteria andTotalPriceGreaterThanOrEqualTo(Float value) {
			addCriterion("total_price >=", value, "totalPrice");
			return (Criteria) this;
		}

		public Criteria andTotalPriceLessThan(Float value) {
			addCriterion("total_price <", value, "totalPrice");
			return (Criteria) this;
		}

		public Criteria andTotalPriceLessThanOrEqualTo(Float value) {
			addCriterion("total_price <=", value, "totalPrice");
			return (Criteria) this;
		}

		public Criteria andTotalPriceIn(List<Float> values) {
			addCriterion("total_price in", values, "totalPrice");
			return (Criteria) this;
		}

		public Criteria andTotalPriceNotIn(List<Float> values) {
			addCriterion("total_price not in", values, "totalPrice");
			return (Criteria) this;
		}

		public Criteria andTotalPriceBetween(Float value1, Float value2) {
			addCriterion("total_price between", value1, value2, "totalPrice");
			return (Criteria) this;
		}

		public Criteria andTotalPriceNotBetween(Float value1, Float value2) {
			addCriterion("total_price not between", value1, value2,
					"totalPrice");
			return (Criteria) this;
		}

		public Criteria andOrderTimeIsNull() {
			addCriterion("order_time is null");
			return (Criteria) this;
		}

		public Criteria andOrderTimeIsNotNull() {
			addCriterion("order_time is not null");
			return (Criteria) this;
		}

		public Criteria andOrderTimeEqualTo(Date value) {
			addCriterion("order_time =", value, "orderTime");
			return (Criteria) this;
		}

		public Criteria andOrderTimeNotEqualTo(Date value) {
			addCriterion("order_time <>", value, "orderTime");
			return (Criteria) this;
		}

		public Criteria andOrderTimeGreaterThan(Date value) {
			addCriterion("order_time >", value, "orderTime");
			return (Criteria) this;
		}

		public Criteria andOrderTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("order_time >=", value, "orderTime");
			return (Criteria) this;
		}

		public Criteria andOrderTimeLessThan(Date value) {
			addCriterion("order_time <", value, "orderTime");
			return (Criteria) this;
		}

		public Criteria andOrderTimeLessThanOrEqualTo(Date value) {
			addCriterion("order_time <=", value, "orderTime");
			return (Criteria) this;
		}

		public Criteria andOrderTimeIn(List<Date> values) {
			addCriterion("order_time in", values, "orderTime");
			return (Criteria) this;
		}

		public Criteria andOrderTimeNotIn(List<Date> values) {
			addCriterion("order_time not in", values, "orderTime");
			return (Criteria) this;
		}

		public Criteria andOrderTimeBetween(Date value1, Date value2) {
			addCriterion("order_time between", value1, value2, "orderTime");
			return (Criteria) this;
		}

		public Criteria andOrderTimeNotBetween(Date value1, Date value2) {
			addCriterion("order_time not between", value1, value2, "orderTime");
			return (Criteria) this;
		}

		public Criteria andRecipientIsNull() {
			addCriterion("recipient is null");
			return (Criteria) this;
		}

		public Criteria andRecipientIsNotNull() {
			addCriterion("recipient is not null");
			return (Criteria) this;
		}

		public Criteria andRecipientEqualTo(String value) {
			addCriterion("recipient =", value, "recipient");
			return (Criteria) this;
		}

		public Criteria andRecipientNotEqualTo(String value) {
			addCriterion("recipient <>", value, "recipient");
			return (Criteria) this;
		}

		public Criteria andRecipientGreaterThan(String value) {
			addCriterion("recipient >", value, "recipient");
			return (Criteria) this;
		}

		public Criteria andRecipientGreaterThanOrEqualTo(String value) {
			addCriterion("recipient >=", value, "recipient");
			return (Criteria) this;
		}

		public Criteria andRecipientLessThan(String value) {
			addCriterion("recipient <", value, "recipient");
			return (Criteria) this;
		}

		public Criteria andRecipientLessThanOrEqualTo(String value) {
			addCriterion("recipient <=", value, "recipient");
			return (Criteria) this;
		}

		public Criteria andRecipientLike(String value) {
			addCriterion("recipient like", value, "recipient");
			return (Criteria) this;
		}

		public Criteria andRecipientNotLike(String value) {
			addCriterion("recipient not like", value, "recipient");
			return (Criteria) this;
		}

		public Criteria andRecipientIn(List<String> values) {
			addCriterion("recipient in", values, "recipient");
			return (Criteria) this;
		}

		public Criteria andRecipientNotIn(List<String> values) {
			addCriterion("recipient not in", values, "recipient");
			return (Criteria) this;
		}

		public Criteria andRecipientBetween(String value1, String value2) {
			addCriterion("recipient between", value1, value2, "recipient");
			return (Criteria) this;
		}

		public Criteria andRecipientNotBetween(String value1, String value2) {
			addCriterion("recipient not between", value1, value2, "recipient");
			return (Criteria) this;
		}

		public Criteria andReceiptStateIsNull() {
			addCriterion("receipt_state is null");
			return (Criteria) this;
		}

		public Criteria andReceiptStateIsNotNull() {
			addCriterion("receipt_state is not null");
			return (Criteria) this;
		}

		public Criteria andReceiptStateEqualTo(Integer value) {
			addCriterion("receipt_state =", value, "receiptState");
			return (Criteria) this;
		}

		public Criteria andReceiptStateNotEqualTo(Integer value) {
			addCriterion("receipt_state <>", value, "receiptState");
			return (Criteria) this;
		}

		public Criteria andReceiptStateGreaterThan(Integer value) {
			addCriterion("receipt_state >", value, "receiptState");
			return (Criteria) this;
		}

		public Criteria andReceiptStateGreaterThanOrEqualTo(Integer value) {
			addCriterion("receipt_state >=", value, "receiptState");
			return (Criteria) this;
		}

		public Criteria andReceiptStateLessThan(Integer value) {
			addCriterion("receipt_state <", value, "receiptState");
			return (Criteria) this;
		}

		public Criteria andReceiptStateLessThanOrEqualTo(Integer value) {
			addCriterion("receipt_state <=", value, "receiptState");
			return (Criteria) this;
		}

		public Criteria andReceiptStateIn(List<Integer> values) {
			addCriterion("receipt_state in", values, "receiptState");
			return (Criteria) this;
		}

		public Criteria andReceiptStateNotIn(List<Integer> values) {
			addCriterion("receipt_state not in", values, "receiptState");
			return (Criteria) this;
		}

		public Criteria andReceiptStateBetween(Integer value1, Integer value2) {
			addCriterion("receipt_state between", value1, value2,
					"receiptState");
			return (Criteria) this;
		}

		public Criteria andReceiptStateNotBetween(Integer value1, Integer value2) {
			addCriterion("receipt_state not between", value1, value2,
					"receiptState");
			return (Criteria) this;
		}

		public Criteria andConfirmedIsNull() {
			addCriterion("confirmed is null");
			return (Criteria) this;
		}

		public Criteria andConfirmedIsNotNull() {
			addCriterion("confirmed is not null");
			return (Criteria) this;
		}

		public Criteria andConfirmedEqualTo(Boolean value) {
			addCriterion("confirmed =", value, "confirmed");
			return (Criteria) this;
		}

		public Criteria andConfirmedNotEqualTo(Boolean value) {
			addCriterion("confirmed <>", value, "confirmed");
			return (Criteria) this;
		}

		public Criteria andConfirmedGreaterThan(Boolean value) {
			addCriterion("confirmed >", value, "confirmed");
			return (Criteria) this;
		}

		public Criteria andConfirmedGreaterThanOrEqualTo(Boolean value) {
			addCriterion("confirmed >=", value, "confirmed");
			return (Criteria) this;
		}

		public Criteria andConfirmedLessThan(Boolean value) {
			addCriterion("confirmed <", value, "confirmed");
			return (Criteria) this;
		}

		public Criteria andConfirmedLessThanOrEqualTo(Boolean value) {
			addCriterion("confirmed <=", value, "confirmed");
			return (Criteria) this;
		}

		public Criteria andConfirmedIn(List<Boolean> values) {
			addCriterion("confirmed in", values, "confirmed");
			return (Criteria) this;
		}

		public Criteria andConfirmedNotIn(List<Boolean> values) {
			addCriterion("confirmed not in", values, "confirmed");
			return (Criteria) this;
		}

		public Criteria andConfirmedBetween(Boolean value1, Boolean value2) {
			addCriterion("confirmed between", value1, value2, "confirmed");
			return (Criteria) this;
		}

		public Criteria andConfirmedNotBetween(Boolean value1, Boolean value2) {
			addCriterion("confirmed not between", value1, value2, "confirmed");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table orders
	 * @mbggenerated  Fri Apr 17 15:59:21 CST 2015
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table orders
     *
     * @mbggenerated do_not_delete_during_merge Mon Apr 13 20:43:04 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

}